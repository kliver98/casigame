{"version":3,"sources":["pages/PageNotFound.js","actions/constants.js","pages/UserCreate.js","pages/UserEdit.js","util/functions.js","pages/User.js","pages/Game.js","pages/Home.js","routes.js","reportWebVitals.js","index.js"],"names":["PageNotFound","API_BASE","UserCreate","checkFields","user","_id","username","length","password","submit","axios","post","then","resp","status","document","getElementById","innerHTML","props","reload","className","onSubmit","event","handleSubmit","id","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","htmlFor","type","name","placeholder","autoComplete","required","preventDefault","fullname","value","parseInt","this","Form1","Component","UserEdit","put","userId","get","data","filter","defaultValue","disabled","money","formatmoney","m","toString","rst","i","split","reverse","join","Users","users","useState","create","setCreate","edit","setEdit","returnrow","pointer","cursor","scope","onClick","delete","deleteuser","map","Game","message","setMessage","bets","setBets","startTimer","duration","display","minutes","seconds","timer","setInterval","textContent","random","Math","round","betsTmp","bet","mode","undefined","forEach","amount","res","x","u","find","y","payBets","showMessage","time","setTimeout","betFunction","doc","doc2","childNodes","selectedIndex","color","isNaN","checkFileds","response","floor","prev","window","onload","background","aria-label","min","max","step","Home","setUsers","Date","now","setReload","useEffect","User","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","routes"],"mappings":"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","file":"static/js/main.5e1d2e92.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div>\r\n        <h1>404</h1>\r\n        <h3>\r\n          Page Not Found\r\n        </h3>\r\n        <div >\r\n          Sorry, but the page you are looking for has not been found. Try checking\r\n           the URL for error, then hit the refresh button on your browser.\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound;","export const API_BASE = \"https://casigame.herokuapp.com/api\";\r\nexport const GET_USERS = \"getUsers\";\r\nexport const SET_USERS = \"setUsers\";\r\nexport const MIN_BET = 1000;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport {API_BASE} from '../actions/constants'\r\n\r\nclass UserCreate extends Component {\r\n\r\n    Form1() {\r\n        return (\r\n            <div className=\"col-12\">\r\n                <form className=\"form-horizontal\" onSubmit={(event) => this.handleSubmit(event)}>\r\n                    <fieldset>\r\n                        <div id=\"legend\">\r\n                        <legend className=\"\">Registrarse</legend>\r\n                        <span id=\"message\"></span>\r\n                        </div>\r\n                        <div className=\"progress mb-2\">\r\n                            <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width: '100%'}} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                    \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\" htmlFor=\"fullname\">Nombre completo</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"text\" id=\"fullname\" name=\"fullname\" placeholder=\"\" autoComplete=\"off\" className=\"col-10\" />\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\"  htmlFor=\"username\">Usuario</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Min:3 y Max:10 caracteres\" autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n\r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\" htmlFor=\"password\">Contraseña</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Min:5 y Max:10 caracteres\" autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\"  htmlFor=\"_id\">Número de identificación</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"number\" id=\"_id\" name=\"_id\" placeholder=\"\" autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group mt-4\">\r\n                        <div className=\"controls\">\r\n                            <button type=\"submit\" className=\"btn btn-success\">Registrarse</button>\r\n                        </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let user = {\r\n            fullname: document.getElementById(\"fullname\").value,\r\n            _id: parseInt(document.getElementById(\"_id\").value),\r\n            username: document.getElementById(\"username\").value,\r\n            password: document.getElementById(\"password\").value,\r\n        };\r\n        if ( !this.checkFields(user) ) {\r\n            document.getElementById(\"message\").innerHTML = \"<span style='color:red;'>Error, verifique los campos</span>\";\r\n        } else {\r\n            this.submit(user);\r\n        }\r\n    }\r\n\r\n    checkFields = (user) => {\r\n        if ( user._id==='' || user.username==='' || user.username.length<3 || user.username.length>10 || user.password==='' || user.password.length<5 || user.password.length>10 ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    submit = (user) => {\r\n        axios.post(API_BASE+\"/users\",user).then(resp => {\r\n            if (resp.status===200 || resp.status===201) {\r\n                document.getElementById(\"message\").innerHTML = \"<span style='color:green;'>Creado correctamente</span>\";\r\n                this.props.reload();\r\n                return\r\n            }\r\n                \r\n        })\r\n        document.getElementById(\"message\").innerHTML = \"<span style='color:red;'>Ocurrio un error, cambia los datos o intenta más tarde</span>\";\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                {this.Form1()}\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default UserCreate;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport {API_BASE} from '../actions/constants'\r\n\r\nclass UserEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.userId = props.id\r\n        this.user = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(API_BASE+\"/users/\").then(resp => {\r\n            this.user = resp.data.filter(user => user._id===this.userId)[0]\r\n        })\r\n    }\r\n\r\n    Form1() {\r\n        return (\r\n            <div className=\"col-12\">\r\n                <form className=\"form-horizontal\" onSubmit={(event) => this.handleSubmit(event)}>\r\n                    <fieldset>\r\n                        <div id=\"legend\">\r\n                        <legend className=\"\">Editar</legend>\r\n                        <span id=\"message\"></span>\r\n                        </div>\r\n                        <div className=\"progress mb-2\">\r\n                            <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width: '100%'}} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                    \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\" htmlFor=\"fullname\">Nombre completo</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"text\" id=\"fullname\" name=\"fullname\" defaultValue={this.user.fullname} placeholder=\"\" autoComplete=\"off\" className=\"col-10\" />\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\"  htmlFor=\"username\">Usuario</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"text\" id=\"username\" name=\"username\" defaultValue={this.user.username} placeholder=\"Min:3 y Max:10 caracteres\" autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n\r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\" htmlFor=\"password\">Contraseña</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"password\" id=\"password\" name=\"password\" defaultValue={this.user.password} placeholder=\"Min:5 y Max:10 caracteres\" autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\"  htmlFor=\"_id\">Número de identificación</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"number\" id=\"_id\" name=\"_id\" placeholder=\"\" disabled defaultValue={this.user._id} autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n\r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\"  htmlFor=\"money\">Dinero</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"number\" id=\"money\" name=\"money\" placeholder=\"\" defaultValue={this.user.money} autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group mt-4\">\r\n                        <div className=\"controls\">\r\n                            <button type=\"submit\" className=\"btn btn-success\">Modificar</button>\r\n                        </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let user = {\r\n            fullname: document.getElementById(\"fullname\").value,\r\n            _id: parseInt(document.getElementById(\"_id\").value),\r\n            username: document.getElementById(\"username\").value,\r\n            password: document.getElementById(\"password\").value,\r\n            money: document.getElementById(\"money\").value\r\n        };\r\n        if ( !this.checkFields(user) ) {\r\n            document.getElementById(\"message\").innerHTML = \"<span style='color:red;'>Error, verifique los campos</span>\";\r\n        } else {\r\n            this.submit(user);\r\n        }\r\n    }\r\n\r\n    checkFields = (user) => {\r\n        if ( user._id==='' || user.username==='' || user.username.length<3 || user.username.length>10 || user.password==='' || user.password.length<5 || user.password.length>10 ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    submit = (user) => {\r\n        axios.put(API_BASE+\"/users/\"+this.userId,user).then(resp => {\r\n            if (resp.status===200 || resp.status===201) {\r\n                document.getElementById(\"message\").innerHTML = \"<span style='color:green;'>Editado correctamente</span>\";\r\n                return\r\n            }\r\n                \r\n        })\r\n        document.getElementById(\"message\").innerHTML = \"<span style='color:red;'>Ocurrio un error, cambia los datos o intenta más tarde</span>\";\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                {this.Form1()}\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default UserEdit;","export function formatmoney(money) {\r\n    var m = money.toString()\r\n    var rst = '';\r\n    if (money.toString().length<4)\r\n        return money\r\n    for(var i=m.length-1; i>=0;i--) {\r\n        rst+=m[i]\r\n        if ((m.length-(i))%3===0 && i!==0) {\r\n            rst+='.'\r\n        }\r\n    }\r\n    return rst.split('').reverse().join('')\r\n}","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {API_BASE} from '../actions/constants'\r\nimport UserCreate from './UserCreate'\r\nimport UserEdit from './UserEdit'\r\nimport {formatmoney} from '../util/functions'\r\n\r\nconst Users = (props) => {\r\n\r\n    let {users,reload} = props\r\n    const [create, setCreate] = useState(false);\r\n    const [edit, setEdit] = useState(-1);\r\n\r\n    function deleteuser(id) {\r\n        axios.delete(API_BASE+\"/users/\"+id).then(() => reload())\r\n    }\r\n\r\n    function returnrow(username, id, money) {\r\n        var pointer = {cursor: \"pointer\"}\r\n        return (\r\n            <tr key={id}>\r\n                <th scope=\"row\">{id}</th>\r\n                <td>{username}</td>\r\n                <td>$ {formatmoney(money)}</td>\r\n                <td>\r\n                    <i className=\"fas fa-user-edit mr-2\" style={pointer} onClick={() => {reload(); setEdit(id)}}></i>\r\n                    <i className=\"fas fa-user-minus\" style={pointer} onClick={() => deleteuser(id)}></i>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <button type=\"button\" className=\"btn btn-secondary mr-1 col-md-5\" onClick={() => {reload(); setCreate(true); setEdit(-1)}}>Crear Usuario</button>\r\n            <button type=\"button\" className=\"btn btn-primary ml-1 col-md-5\" onClick={() => {reload(); setCreate(false); setEdit(-1)}}>Ver Usuarios</button>\r\n            <div className=\"mb-4\"></div>\r\n            {\r\n                edit!==-1 ?\r\n                <UserEdit id={edit}></UserEdit>\r\n                : ''\r\n            }\r\n            {\r\n                users.length>0 && !create && edit===-1 ? \r\n                <table className=\"table bg-info\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Nombre de usuario</th>\r\n                        <th scope=\"col\">Dinero disponible</th>\r\n                        <th scope=\"col\">Opciones</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            users.map(user => returnrow(user.username, user._id, user.money))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                : !create ? 'No hay usuarios para mostrar':<UserCreate reload={reload}></UserCreate>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {API_BASE,MIN_BET} from '../actions/constants'\r\nimport {formatmoney} from '../util/functions'\r\n\r\nconst Game = (props) => {\r\n\r\n    let {users} = props\r\n    let time = []\r\n    const [message, setMessage] = useState([]);\r\n    const [bets, setBets] = useState([]);\r\n\r\n    function startTimer(duration, display) {\r\n        var timer = duration, minutes, seconds;\r\n        setInterval(function () {\r\n            minutes = parseInt(timer / 60, 10);\r\n            seconds = parseInt(timer % 60, 10);\r\n            \r\n            minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n            seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n            \r\n            display.textContent = minutes + \":\" + seconds;\r\n            \r\n            time = [minutes,seconds]\r\n            if (--timer < 0) { //When time it's over\r\n                timer = duration;\r\n                payBets();\r\n            }  \r\n        }, 1000);\r\n    }\r\n\r\n    window.onload = function () {\r\n        var minutes = 60 * 3,\r\n            display = document.getElementById('time');\r\n        startTimer(minutes, display);\r\n    };\r\n\r\n    function payBets() {\r\n        var random = Math.round(Math.random() * 3)\r\n        random = random===1 ? 'red' : random===2 ? 'green' : 'black'\r\n        let betsTmp = bets.filter(bet => {\r\n            return bet.mode===random\r\n        })\r\n        if (betsTmp===undefined || betsTmp===null)\r\n            return\r\n        betsTmp.forEach(bet => {\r\n            var amount = random==='green' ? bet.amount*10:bet.amount*2\r\n            bet.amount = amount\r\n        });\r\n        axios.get(API_BASE+\"/users/\").then(res => {\r\n            betsTmp.forEach(x => {\r\n                var u = res.data.find(y => y._id===parseInt(x.id))\r\n                u.money+=x.amount\r\n                axios.put(API_BASE+\"/users/\"+u._id,u)\r\n            })\r\n        })\r\n        setBets([])\r\n    }\r\n\r\n    function checkFileds(bet) {\r\n        var color = bet.mode==='red' || bet.mode==='green' || bet.mode==='black'\r\n        if ( isNaN(bet.id) || isNaN(bet.amount) || !color)\r\n            return false\r\n        return true\r\n    }\r\n\r\n    function showMessage(message, type, time = 3000) {\r\n        setMessage([message,type])\r\n        setTimeout(() => setMessage([]),time)\r\n    }\r\n\r\n    function betFunction() {\r\n        var doc = document.getElementById('user')\r\n        var doc2 = document.getElementById('mode')\r\n        var bet = {\r\n            id: doc.childNodes[doc.selectedIndex].value,\r\n            amount: document.getElementById('bet').value,\r\n            mode: doc2.childNodes[doc2.selectedIndex].value\r\n        }\r\n        if (checkFileds(bet)) {\r\n            axios.get(API_BASE+\"/users/\"+bet.id).then(response => {\r\n                var user = response.data\r\n                if (response.status===200 && user) {\r\n                    if (user.money>MIN_BET) {\r\n                        bet.amount = Math.floor((user.money*bet.amount)/100)\r\n                        showMessage('Se apostara $ '+formatmoney(bet.amount)+' [Id: '+bet.id+'] para '+bet.mode, 'success')\r\n                    }else {\r\n                        if (user.money>0) {\r\n                            bet.amount = user.money\r\n                            showMessage('Advertencia: Se apostara ALL IN [MIN: '+MIN_BET+']', 'warning')\r\n                        } else\r\n                            showMessage('Error: no tiene fondos suficientes [dinero: '+user.money+']','danger')\r\n                    }\r\n                } else {\r\n                    showMessage('Error: no se encontro usuario. Verifique id ['+bet.id+']','danger')\r\n                }\r\n            }).then(() => {\r\n                if (bet.amount>100) {\r\n                    setBets(prev => [...prev, bet])\r\n                }\r\n            })\r\n        }else {\r\n            showMessage('Error: hay campos incorrectos','danger')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-3 pt-2 pb-2\" style={{background:\"gainsboro\"}}>\r\n            <div className=\"col-12\">\r\n                <select className=\"form-select\" id=\"user\" aria-label=\"Select user\">\r\n                <option defaultValue>Seleccione usuario</option>\r\n                {\r\n                    users.map(user => {return (<option value={user._id} key={user._id}>{user.username+\" - \"+user._id}</option>)})\r\n                }\r\n                </select>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"control-group\">\r\n                <label className=\"control-label\"  htmlFor=\"bet\">Cantidad de apuesta %</label>\r\n                <div className=\"controls\">\r\n                    <input type=\"number\" id=\"bet\" name=\"bet\" placeholder=\"min:11 - max:19\" autoComplete=\"off\" className=\"col-10\" required min=\"11\" max=\"19\" step=\"0.1\" defaultValue=\"11\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"control-group\">\r\n                <label className=\"control-label\"  htmlFor=\"betMode\">Modo apuesta</label>\r\n                <div className=\"controls\">\r\n                    <select className=\"form-select\" id=\"mode\" aria-label=\"Color\">\r\n                    <option value=\"green\">Verde - 1%</option>\r\n                    <option value=\"red\">Rojo - 49.5%</option>\r\n                    <option value=\"black\">Negro - 49.5%</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <div>\r\n                <button type=\"button\" className=\"btn btn-info\" onClick={() => betFunction()}>Apostar</button>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"col-12\">\r\n                <h5>Siguiente juego automático en: </h5>\r\n                <h5 id=\"time\"></h5>\r\n            </div>\r\n            {\r\n                message ? \r\n                <div id=\"messagePropmt\" className={\"alert alert-\"+message[1]} role=\"alert\">\r\n                    {message[0]}\r\n                </div>\r\n                :''\r\n            }\r\n            <div className=\"col-12\">\r\n                <h5>Último juego [Color: color]: </h5>\r\n                <table id=\"lastBet\" className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Cantidad Apostada</th>\r\n                        <th scope=\"col\">Modo</th>\r\n                        <th scope=\"col\">Pago</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","import React, {useEffect, useState} from 'react'\r\nimport User from './User'\r\nimport Game from './Game'\r\nimport {API_BASE} from '../actions/constants'\r\nimport axios from 'axios'\r\n\r\nconst Home = () => {\r\n\r\n    const [users,setUsers] = useState([]);\r\n    const [reload,setReload] = useState(Date.now);\r\n\r\n    useEffect(() => {\r\n        axios.get(API_BASE+\"/users\").then(response => {\r\n            if (response.status === 200) {\r\n                setUsers(response.data);\r\n            }\r\n          }\r\n            );\r\n    },[reload]);\r\n\r\n    function changeReload() {\r\n        setReload(Date.now)\r\n    }\r\n\r\n    return (\r\n        <div className=\"pl-4 pr-4 pt-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-7 text-center\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                        <h2>Juego</h2>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <Game users={users}></Game>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-5 text-center\">\r\n                    <h2>Gestión de usuarios</h2>\r\n                    <br></br>\r\n                    <User users={users} reload={changeReload}></User>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\n\r\nimport PageNotFound from \"./pages/PageNotFound\";\r\nimport Home from \"./pages/Home\";\r\n\r\nexport default (\r\n    <Router basename=\"/casigame\">\r\n      <Switch> \r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"*\" component={PageNotFound} />\r\n    </Switch>\r\n  </Router>\r\n\r\n\r\n);","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport routes from \"./routes\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport reportWebVitals from './reportWebVitals';\r\n/*import { Provider } from 'react-redux'\r\nimport user from './reducers/user'\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport ReduxPromise from 'redux-promise';\r\n\r\nconst reducer = combineReducers({\r\n  user\r\n});\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);*/\r\n\r\nReactDOM.render(\r\n  <>\r\n    <Router>{routes}</Router>\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}