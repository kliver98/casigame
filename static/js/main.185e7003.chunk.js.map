{"version":3,"sources":["pages/PageNotFound.js","actions/constants.js","pages/UserCreate.js","pages/UserEdit.js","pages/User.js","pages/Game.js","pages/Home.js","routes.js","reducers/user.js","redux/store.js","reportWebVitals.js","index.js"],"names":["PageNotFound","API_BASE","SET_USER","UserCreate","checkFields","user","_id","username","length","password","submit","axios","post","then","resp","status","document","getElementById","innerHTML","className","onSubmit","event","handleSubmit","id","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","htmlFor","type","name","placeholder","autoComplete","required","preventDefault","fullname","value","parseInt","this","Form1","Component","UserEdit","props","put","userId","get","data","filter","defaultValue","disabled","money","Users","useState","users","setUsers","create","setCreate","edit","setEdit","formatmoney","m","toString","rst","i","split","reverse","join","returnrow","pointer","cursor","scope","onClick","delete","deleteuser","useEffect","response","map","Game","load","setLoad","message","setMessage","bets","setBets","showMessage","time","setTimeout","betFunction","doc","doc2","bet","childNodes","selectedIndex","amount","mode","color","isNaN","checkFileds","prev","window","onload","duration","display","minutes","seconds","timer","setInterval","textContent","startTimer","querySelector","background","aria-label","min","max","step","random","Math","round","forEach","res","x","u","find","y","payBets","location","reload","Home","User","basename","path","exact","component","defaultState","email","rol","reducer","state","payload","combineReducers","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","console","log","getState","routes"],"mappings":"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","file":"static/js/main.185e7003.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div>\r\n        <h1>404</h1>\r\n        <h3>\r\n          Page Not Found\r\n        </h3>\r\n        <div >\r\n          Sorry, but the page you are looking for has not been found. Try checking\r\n           the URL for error, then hit the refresh button on your browser.\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound;","export const PASSWORD = \"Contraseña\";\r\nexport const USER = \"Correo\";\r\nexport const MESSAGE = \"Mensaje\";\r\nexport const API_BASE = \"https://casigame.herokuapp.com/api\";\r\nexport const SET_USER = \"setUser\";\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport {API_BASE} from '../actions/constants'\r\n\r\nclass UserCreate extends Component {\r\n\r\n    Form1() {\r\n        return (\r\n            <div className=\"col-12\">\r\n                <form className=\"form-horizontal\" onSubmit={(event) => this.handleSubmit(event)}>\r\n                    <fieldset>\r\n                        <div id=\"legend\">\r\n                        <legend className=\"\">Registrarse</legend>\r\n                        <span id=\"message\"></span>\r\n                        </div>\r\n                        <div className=\"progress mb-2\">\r\n                            <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width: '100%'}} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                    \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\" htmlFor=\"fullname\">Nombre completo</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"text\" id=\"fullname\" name=\"fullname\" placeholder=\"\" autoComplete=\"off\" className=\"col-10\" />\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\"  htmlFor=\"username\">Usuario</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Min:3 y Max:10 caracteres\" autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n\r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\" htmlFor=\"password\">Contraseña</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Min:5 y Max:10 caracteres\" autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\"  htmlFor=\"_id\">Número de identificación</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"number\" id=\"_id\" name=\"_id\" placeholder=\"\" autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group mt-4\">\r\n                        <div className=\"controls\">\r\n                            <button type=\"submit\" className=\"btn btn-success\">Registrarse</button>\r\n                        </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let user = {\r\n            fullname: document.getElementById(\"fullname\").value,\r\n            _id: parseInt(document.getElementById(\"_id\").value),\r\n            username: document.getElementById(\"username\").value,\r\n            password: document.getElementById(\"password\").value,\r\n        };\r\n        if ( !this.checkFields(user) ) {\r\n            document.getElementById(\"message\").innerHTML = \"<span style='color:red;'>Error, verifique los campos</span>\";\r\n        } else {\r\n            this.submit(user);\r\n        }\r\n    }\r\n\r\n    checkFields = (user) => {\r\n        if ( user._id==='' || user.username==='' || user.username.length<3 || user.username.length>10 || user.password==='' || user.password.length<5 || user.password.length>10 ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    submit = (user) => {\r\n        axios.post(API_BASE+\"/users\",user).then(resp => {\r\n            if (resp.status===200 || resp.status===201) {\r\n                document.getElementById(\"message\").innerHTML = \"<span style='color:green;'>Creado correctamente</span>\";\r\n                return\r\n            }\r\n                \r\n        })\r\n        document.getElementById(\"message\").innerHTML = \"<span style='color:red;'>Ocurrio un error, cambia los datos o intenta más tarde</span>\";\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                {this.Form1()}\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default UserCreate;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport {API_BASE} from '../actions/constants'\r\n\r\nclass UserEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.userId = props.id\r\n        this.user = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(API_BASE+\"/users/\").then(resp => {\r\n            this.user = resp.data.filter(user => user._id===this.userId)[0]\r\n        })\r\n    }\r\n\r\n    Form1() {\r\n        return (\r\n            <div className=\"col-12\">\r\n                <form className=\"form-horizontal\" onSubmit={(event) => this.handleSubmit(event)}>\r\n                    <fieldset>\r\n                        <div id=\"legend\">\r\n                        <legend className=\"\">Editar</legend>\r\n                        <span id=\"message\"></span>\r\n                        </div>\r\n                        <div className=\"progress mb-2\">\r\n                            <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width: '100%'}} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                    \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\" htmlFor=\"fullname\">Nombre completo</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"text\" id=\"fullname\" name=\"fullname\" defaultValue={this.user.fullname} placeholder=\"\" autoComplete=\"off\" className=\"col-10\" />\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\"  htmlFor=\"username\">Usuario</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"text\" id=\"username\" name=\"username\" defaultValue={this.user.username} placeholder=\"Min:3 y Max:10 caracteres\" autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n\r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\" htmlFor=\"password\">Contraseña</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"password\" id=\"password\" name=\"password\" defaultValue={this.user.password} placeholder=\"Min:5 y Max:10 caracteres\" autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\"  htmlFor=\"_id\">Número de identificación</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"number\" id=\"_id\" name=\"_id\" placeholder=\"\" disabled defaultValue={this.user._id} autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n\r\n                        <div className=\"control-group\">\r\n                        <label className=\"control-label\"  htmlFor=\"money\">Dinero</label>\r\n                        <div className=\"controls\">\r\n                            <input type=\"number\" id=\"money\" name=\"money\" placeholder=\"\" defaultValue={this.user.money} autoComplete=\"off\" className=\"col-10\" required/>\r\n                        </div>\r\n                        </div>\r\n        \r\n                        <div className=\"control-group mt-4\">\r\n                        <div className=\"controls\">\r\n                            <button type=\"submit\" className=\"btn btn-success\">Modificar</button>\r\n                        </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let user = {\r\n            fullname: document.getElementById(\"fullname\").value,\r\n            _id: parseInt(document.getElementById(\"_id\").value),\r\n            username: document.getElementById(\"username\").value,\r\n            password: document.getElementById(\"password\").value,\r\n            money: document.getElementById(\"money\").value\r\n        };\r\n        if ( !this.checkFields(user) ) {\r\n            document.getElementById(\"message\").innerHTML = \"<span style='color:red;'>Error, verifique los campos</span>\";\r\n        } else {\r\n            this.submit(user);\r\n        }\r\n    }\r\n\r\n    checkFields = (user) => {\r\n        if ( user._id==='' || user.username==='' || user.username.length<3 || user.username.length>10 || user.password==='' || user.password.length<5 || user.password.length>10 ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    submit = (user) => {\r\n        axios.put(API_BASE+\"/users/\"+this.userId,user).then(resp => {\r\n            if (resp.status===200 || resp.status===201) {\r\n                document.getElementById(\"message\").innerHTML = \"<span style='color:green;'>Editado correctamente</span>\";\r\n                return\r\n            }\r\n                \r\n        })\r\n        document.getElementById(\"message\").innerHTML = \"<span style='color:red;'>Ocurrio un error, cambia los datos o intenta más tarde</span>\";\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                {this.Form1()}\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default UserEdit;","import React, {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {API_BASE} from '../actions/constants'\r\nimport UserCreate from './UserCreate'\r\nimport UserEdit from './UserEdit'\r\n\r\nconst Users = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [create, setCreate] = useState(false);\r\n    const [edit, setEdit] = useState(-1);\r\n\r\n    useEffect(() => {\r\n        axios.get(API_BASE+\"/users\").then(response => {\r\n        if (response.status === 200) {\r\n            setUsers(response.data);\r\n        }\r\n      }\r\n        );\r\n      }, [create,edit]);\r\n\r\n    function formatmoney(money) {\r\n        var m = money.toString()\r\n        var rst = '';\r\n        if (money.toString().length<4)\r\n            return money\r\n        for(var i=m.length-1; i>=0;i--) {\r\n            rst+=m[i]\r\n            if ((m.length-(i))%3===0 && i!==0) {\r\n                rst+='.'\r\n            }\r\n        }\r\n        return rst.split('').reverse().join('')\r\n    }\r\n\r\n    function deleteuser(id) {\r\n        axios.delete(API_BASE+\"/users/\"+id)\r\n    }\r\n\r\n    function returnrow(username, id, money) {\r\n        var pointer = {cursor: \"pointer\"}\r\n        return (\r\n            <tr key={id}>\r\n                <th scope=\"row\">{id}</th>\r\n                <td>{username}</td>\r\n                <td>$ {formatmoney(money)}</td>\r\n                <td>\r\n                    <i className=\"fas fa-user-edit mr-2\" style={pointer} onClick={() => setEdit(id)}></i>\r\n                    <i className=\"fas fa-user-minus\" style={pointer} onClick={() => deleteuser(id)}></i>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <button type=\"button\" className=\"btn btn-secondary mr-1 col-md-5\" onClick={() => {setCreate(true); setEdit(-1)}}>Crear Usuario</button>\r\n            <button type=\"button\" className=\"btn btn-primary ml-1 col-md-5\" onClick={() => {setCreate(false); setEdit(-1)}}>Ver Usuarios</button>\r\n            <div className=\"mb-4\"></div>\r\n            {\r\n                edit!==-1 ?\r\n                <UserEdit id={edit}></UserEdit>\r\n                : ''\r\n            }\r\n            {\r\n                users.length>0 && !create && edit===-1 ? \r\n                <table className=\"table bg-info\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Nombre de usuario</th>\r\n                        <th scope=\"col\">Dinero disponible</th>\r\n                        <th scope=\"col\">Opciones</th>\r\n                        </tr>\r\n                        {\r\n                            users.map(user => returnrow(user.username, user._id, user.money))\r\n                        }\r\n                    </thead>\r\n                    <tbody>\r\n                    </tbody>\r\n                </table>\r\n                : !create ? 'No hay usuarios para mostrar':<UserCreate></UserCreate>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React, {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {API_BASE} from '../actions/constants'\r\n\r\nconst MIN_BET = 1000\r\n\r\nconst Game = () => {\r\n\r\n    const [load, setLoad] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [bets, setBets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(API_BASE+\"/users\").then(response => {\r\n        if (response.status === 200) {\r\n            setUsers(response.data);\r\n        }\r\n      }\r\n        );\r\n      }, [load]);\r\n\r\n    function startTimer(duration, display) {\r\n        var timer = duration, minutes, seconds;\r\n        setInterval(function () {\r\n            minutes = parseInt(timer / 60, 10);\r\n            seconds = parseInt(timer % 60, 10);\r\n    \r\n            minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n            seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n    \r\n            display.textContent = minutes + \":\" + seconds;\r\n    \r\n            if (--timer < 0) { //When time it's over\r\n                timer = duration;\r\n                setLoad(!load)\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    function payBets(bets) {\r\n        var random = Math.round(Math.random() * 3)\r\n        random = random===1 ? 'red' : random===2 ? 'green' : 'black'\r\n        bets = bets.filter(bet => bet.mode===random).forEach(bet => {\r\n            var amount = random==='green' ? bet.amount*10:bet.amount*2\r\n            bet.amount = amount\r\n        });\r\n        setTimeout(() => {\r\n            axios.get(API_BASE+\"/users/\").then(res => {\r\n                bets.forEach(x => {\r\n                    var u = res.data.find(y => y._id==x.id)\r\n                    u.money+=x.amount\r\n                    axios.put(API_BASE+\"/users/\"+u._id,u)\r\n                })\r\n            })\r\n        },500)\r\n\r\n    }\r\n\r\n    function reload() {\r\n        payBets(bets)\r\n        window.location.reload()\r\n    }\r\n    \r\n    window.onload = function () {\r\n        var minutes = 60 * 3,\r\n            display = document.querySelector('#time');\r\n        startTimer(minutes, display);\r\n    };\r\n\r\n    function checkFileds(bet) {\r\n        var color = bet.mode==='red' || bet.mode==='green' || bet.mode==='black'\r\n        if ( isNaN(bet.id) || isNaN(bet.amount) || !color)\r\n            return false\r\n        return true\r\n    }\r\n\r\n    function showMessage(message, time) {\r\n        setMessage(message)\r\n        setTimeout(() => setMessage(''),time)\r\n    }\r\n\r\n    function betFunction() {\r\n        var doc = document.getElementById('user')\r\n        var doc2 = document.getElementById('mode')\r\n        var bet = {\r\n            id: doc.childNodes[doc.selectedIndex].value,\r\n            amount: document.getElementById('bet').value,\r\n            mode: doc2.childNodes[doc2.selectedIndex].value\r\n        }\r\n        if (checkFileds(bet)) {\r\n            axios.get(API_BASE+\"/users/\"+bet.id).then(response => {\r\n                var user = response.data\r\n                if (response.status===200 && user) {\r\n                    if (user.money>MIN_BET) {\r\n                        bet.amount = (user.money*bet.amount)/100\r\n                    }else {\r\n                        if (user.money>0) {\r\n                            bet.amount = user.money\r\n                            showMessage('Advertencia: Se apostara ALL IN [MIN: '+MIN_BET+']',3000)\r\n                        } else\r\n                            showMessage('Error: no tiene fondos suficientes [dinero: '+user.money+']',3000)\r\n                    }\r\n                } else {\r\n                    showMessage('Error: no se encontro usuario. Verifique id ['+bet.id+']',3000)\r\n                }\r\n            }).then(() => {\r\n                if (bet.amount>100) {\r\n                    setBets(prev => [...prev, bet])\r\n                }\r\n            })\r\n        }else {\r\n            showMessage('Error: hay campos incorrectos ',3000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-3 pt-2 pb-2\" style={{background:\"gainsboro\"}}>\r\n            {\r\n                message ? \r\n                <div id=\"messagePropmt\" className=\"alert alert-danger\" role=\"alert\">\r\n                    {message}\r\n                </div>\r\n                :''\r\n            }\r\n            <div className=\"col-12\">\r\n                <select className=\"form-select\" id=\"user\" aria-label=\"Select user\">\r\n                <option defaultValue>Seleccione usuario</option>\r\n                {\r\n                    users.map(user => {return (<option value={user._id} key={user._id}>{user.username+\" - \"+user._id}</option>)})\r\n                }\r\n                </select>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"control-group\">\r\n                <label className=\"control-label\"  htmlFor=\"bet\">Cantidad de apuesta %</label>\r\n                <div className=\"controls\">\r\n                    <input type=\"number\" id=\"bet\" name=\"bet\" placeholder=\"min:11 - max:19\" autoComplete=\"off\" className=\"col-10\" required min=\"11\" max=\"19\" step=\"0.1\" defaultValue=\"11\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"control-group\">\r\n                <label className=\"control-label\"  htmlFor=\"betMode\">Modo apuesta</label>\r\n                <div className=\"controls\">\r\n                    <select className=\"form-select\" id=\"mode\" aria-label=\"Color\">\r\n                    <option value=\"green\">Verde - 1%</option>\r\n                    <option value=\"red\">Rojo - 49.5%</option>\r\n                    <option value=\"black\">Negro - 49.5%</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <div>\r\n                <button type=\"button\" className=\"btn btn-info\" onClick={() => betFunction()}>Apostar</button>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"col-12\">\r\n                <h5>Siguiente juego automático en: </h5>\r\n                <h5 id=\"time\">###</h5>\r\n                {\r\n                    load ? reload():''\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","import React from 'react'\r\nimport User from './User'\r\nimport Game from './Game'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"pl-4 pr-4 pt-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-7 text-center\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                        <h2>Juego</h2>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <Game></Game>\r\n                        </div>\r\n                        {\r\n                            false ? \r\n                            <div className=\"col-12 bg-success\">\r\n                            <h3>Ruleta</h3>\r\n                            </div> : <br></br>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-5 text-center\">\r\n                    <h2>Gestión de usuarios</h2>\r\n                    <br></br>\r\n                    <User></User>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\n\r\nimport PageNotFound from \"./pages/PageNotFound\";\r\nimport Home from \"./pages/Home\";\r\n\r\nexport default (\r\n    <Router basename=\"/casigame\">\r\n      <Switch> \r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"*\" component={PageNotFound} />\r\n    </Switch>\r\n  </Router>\r\n\r\n\r\n);","import { SET_USER } from '../actions/constants';\r\n\r\nlet defaultState = {\r\n    fullname: '',\r\n    email: '',\r\n    rol: '',\r\n}\r\n\r\n\r\nfunction reducer(state = defaultState, { type, payload}) {\r\n    switch (type) {\r\n        case SET_USER:\r\n            return defaultState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore, combineReducers } from 'redux'\r\nimport user from '../reducers/user';\r\n\r\nconst reducer = combineReducers({\r\n    user\r\n  });\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport routes from \"./routes\";\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {console.log(store.getState())}\r\n    <Router>{routes}</Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}